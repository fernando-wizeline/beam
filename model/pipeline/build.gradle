/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins { id 'org.apache.beam.module' }
applyPortabilityNature(
    automaticModuleName: 'org.apache.beam.model.pipeline',
    shadowJarValidationExcludes: ["org/apache/beam/model/pipeline/v1/**"]
)

description = "Apache Beam :: Model :: Pipeline"
ext.summary = "Portable definitions for building pipelines"

// Java 17 needs compileJava to add-exports and add-opens for error prone
if (project.hasProperty("compileAndRunTestsWithJava17")) {
    def java17Home = project.findProperty("java17Home")
    project.tasks.withType(JavaCompile) {
        options.fork = true
        options.forkOptions.javaHome = java17Home as File
        options.compilerArgs += ['-Xlint:-path']
        options.compilerArgs.addAll(['--release', '17'])
        // Error prone requires some packages to be exported/opened for Java 17
        // Disabling checks since this property is only used for Jenkins tests
        // https://github.com/tbroyer/gradle-errorprone-plugin#jdk-16-support
        options.errorprone.errorproneArgs.add("-XepDisableAllChecks")
        options.forkOptions.jvmArgs += [
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED",
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
                "-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
                "-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
                "-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED"
        ]
    }
}

configurations {
    unshaded
}

artifacts {
    unshaded jar
}
